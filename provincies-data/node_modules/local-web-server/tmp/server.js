"use strict";
var express = require("express");
var morgan = require("morgan");
var serveStatic = require("serve-static");
var proxy = require("proxy-middleware");
var path = require("path");
var _ = require("lodash");
var options;
var url = require("url");

try {
    options = require("../server-options");
} catch (err){
    options = {};
}

var defaults = {
    port: 8100,
    proxy: [{
        from: "/api",
        to: "http://localhost:8080/api",
    },
    {
        from: "/_ah",
        to: "http://localhost:8080/_ah",
    }]
};
options = _.extend(defaults, options);

function halt(message){
    console.error("Error: %s",  message);
    process.exit(1);
}

function onServerError(err){
    if (err.code === "EADDRINUSE"){
        halt("port " + options.port + " is already is use");
    } else {
        halt(err.message);
    }
}

var app = express();

/* configure proxy */

if(!Array.isArray(options.proxy)) {
    options.proxy = [options.proxy];
}

for(var i=0;i<options.proxy.length;i++) {
    var proxyOptions = url.parse(options.proxy[i].to);
    app.use(options.proxy[i].from, proxy(proxyOptions));
    console.log("added proxy route: " + options.proxy[i].from + " to " + options.proxy[i].to);
}

/* serve static files */
app.use("/assets", serveStatic("./app/assets"));
app.use("/css", serveStatic("./app/css"));
app.use("/js", serveStatic("./app/js"));
app.use("/sass", serveStatic("./app/sass"));
app.use("/styleguide", serveStatic("./app/styleguide"));

/* for any other URL (e.g. `/search`), serve the SPA */
app.use("*", function(request, response, next) {
    response.sendFile(path.resolve("./app/index.html"));
});

/* launch server */
app.listen(options.port).on("error", onServerError);
console.error(
    "server listening on: %s", options.port
);
